buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'application'
apply plugin: 'maven'

group = 'br.com.example'
version =  '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

bootRepackage {
    mainClass = 'br.com.example.ExampleApplication'
}

repositories {
    mavenCentral()
}

dependencies {

	ext {
        springBootVersion = '1.3.3.RELEASE'
        jjwtVersion = '0.6.0'
    }

    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("io.jsonwebtoken:jjwt:${jjwtVersion}")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.4.0")
    compile group: 'com.sun.jersey', name: 'jersey-client', version: '1.19.4'
    compile group: 'com.sun.jersey', name: 'jersey-json', version: '1.19.4'
    compile group: 'com.sun.jersey', name: 'jersey-client', version: '1.19.4'
    compile group: 'org.json', name: 'json', version: '20090211'
    compile 'commons-lang:commons-lang:2.3'
    
    testCompile("junit:junit")
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
